plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.1'
    id 'io.spring.dependency-management' version '1.1.5'
    id 'com.google.protobuf' version '0.8.17'
}

group = 'com.project'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'mysql:mysql-connector-java:8.0.33'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    implementation 'io.jsonwebtoken:jjwt-api:0.11.2'
    implementation 'io.jsonwebtoken:jjwt-impl:0.11.2'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.11.2'
    implementation 'com.h2database:h2'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2'
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    implementation 'javax.mail:javax.mail-api:1.6.2'
    implementation 'org.apache.httpcomponents:httpclient:4.5.13'

    // JSON
    implementation 'org.json:json:20230227'
    // 구글
    implementation 'com.google.code.gson:gson:2.8.6'
    // Geocoder
    implementation 'com.google.code.geocoder-java:geocoder-java:0.16'
    // QueryDSL
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"
    // 헬스체크
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    // 레디스
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    // STT
    implementation 'com.squareup.okhttp3:okhttp:4.10.0'

    // Ensure jackson-databind is compatible with Spring Boot 3.x
    implementation 'com.fasterxml.jackson.core:jackson-core:2.15.2'
    implementation 'com.fasterxml.jackson.core:jackson-annotations:2.15.2'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.15.2'

    // WebSocket
    implementation 'org.springframework.boot:spring-boot-starter-websocket'

    // gRPC
    implementation 'io.grpc:grpc-netty-shaded:1.47.0'
    implementation 'io.grpc:grpc-protobuf:1.47.0'
    implementation 'io.grpc:grpc-stub:1.55.1'

    // Protobuf for Java
    implementation 'com.google.protobuf:protobuf-java:3.22.2'
    implementation 'javax.annotation:javax.annotation-api:1.3.2'
}

tasks.named('processResources') {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:3.19.1"
    }
    plugins {
        grpc {
            artifact = 'io.grpc:protoc-gen-grpc-java:1.47.0'
        }
    }
    generateProtoTasks {
        all().each { task ->
            task.plugins {
                grpc {
                    // Options added to --grpc_out
                }
            }
        }
    }
}

sourceSets {
    main {
        proto {
            srcDir 'src/main/proto'
        }
        java {
            srcDirs 'build/generated/source/proto/main/java', 'build/generated/source/proto/main/grpc'
        }
    }
}

processResources.dependsOn('copySecret')

tasks.register('copySecret', Copy) {
    from './otoo_submodule' // 서브모듈 디렉토리 경로
    include "application*.yml"  // 복사할 파일들
    into 'src/main/resources'  // 복사 위치
}

test {
    useJUnitPlatform()
    systemProperty "JWT_SECRET_KEY", System.getenv("JWT_SECRET_KEY")
    systemProperty "OAUTH_KAKAO_CLIENT_ID", System.getenv("OAUTH_KAKAO_CLIENT_ID")
    systemProperty "OAUTH_NAVER_CLIENT_ID", System.getenv("OAUTH_NAVER_CLIENT_ID")
    systemProperty "OAUTH_NAVER_CLIENT_SECRET", System.getenv("OAUTH_NAVER_CLIENT_SECRET")
    systemProperty "OAUTH_GOOGLE_CLIENT_ID", System.getenv("OAUTH_GOOGLE_CLIENT_ID")
    systemProperty "OAUTH_GOOGLE_CLIENT_SECRET", System.getenv("OAUTH_GOOGLE_CLIENT_SECRET")
    systemProperty "SPRING_DATASOURCE_URL", System.getenv("SPRING_DATASOURCE_URL")
    systemProperty "SPRING_DATASOURCE_USERNAME", System.getenv("SPRING_DATASOURCE_USERNAME")
    systemProperty "SPRING_DATASOURCE_PASSWORD", System.getenv("SPRING_DATASOURCE_PASSWORD")
    systemProperty "SPRING_MAIL_USERNAME", System.getenv("SPRING_MAIL_USERNAME")
    systemProperty "SPRING_MAIL_PASSWORD", System.getenv("SPRING_MAIL_PASSWORD")
    systemProperty "FASTAPI_URL", System.getenv("FASTAPI_URL")
    systemProperty "REDIS_HOST", System.getenv("REDIS_HOST")
    systemProperty "REDIS_PORT", System.getenv("REDIS_PORT")
}
