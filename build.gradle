plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.1'
    id 'io.spring.dependency-management' version '1.1.5'
}

group = 'com.project'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'mysql:mysql-connector-java:8.0.33'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    implementation 'io.jsonwebtoken:jjwt-api:0.11.2'
    implementation 'io.jsonwebtoken:jjwt-impl:0.11.2'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.11.2'
    implementation 'com.h2database:h2'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2'
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    implementation 'javax.mail:javax.mail-api:1.6.2' // 현재 버전 확인 후 업데이트 가능
    //json
    implementation 'org.json:json:20230227'
    //구글
    implementation 'com.google.code.gson:gson:2.8.6'
    //geocoder
    implementation 'com.google.code.geocoder-java:geocoder-java:0.16'
    // QueryDSL
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"


}

tasks.named('test') {
    useJUnitPlatform()
}

processResources.dependsOn('copySecret')

tasks.register('copySecret', Copy) {
    from './otoo_submodule' // 서브모듈 디렉토리 경로
    include "application*.yml"  // 복사할 파일들
    into 'src/main/resources'  // 복사 위치
}

test {
    useJUnitPlatform()
    systemProperty "JWT_SECRET_KEY", System.getenv("JWT_SECRET_KEY")
    systemProperty "OAUTH_KAKAO_CLIENT_ID", System.getenv("OAUTH_KAKAO_CLIENT_ID")
    systemProperty "OAUTH_NAVER_CLIENT_ID", System.getenv("OAUTH_NAVER_CLIENT_ID")
    systemProperty "OAUTH_NAVER_CLIENT_SECRET", System.getenv("OAUTH_NAVER_CLIENT_SECRET")
    systemProperty "OAUTH_GOOGLE_CLIENT_ID", System.getenv("OAUTH_GOOGLE_CLIENT_ID")
    systemProperty "OAUTH_GOOGLE_CLIENT_SECRET", System.getenv("OAUTH_GOOGLE_CLIENT_SECRET")
    systemProperty "SPRING_DATASOURCE_URL", System.getenv("SPRING_DATASOURCE_URL")
    systemProperty "SPRING_DATASOURCE_USERNAME", System.getenv("SPRING_DATASOURCE_USERNAME")
    systemProperty "SPRING_DATASOURCE_PASSWORD", System.getenv("SPRING_DATASOURCE_PASSWORD")
    systemProperty "SPRING_MAIL_USERNAME", System.getenv("SPRING_MAIL_USERNAME")
    systemProperty "SPRING_MAIL_PASSWORD", System.getenv("SPRING_MAIL_PASSWORD")
    systemProperty "FASTAPI_URL", System.getenv("FASTAPI_URL")
    systemProperty "REDIS_HOST", System.getenv("REDIS_HOST")
    systemProperty "REDIS_PORT", System.getenv("REDIS_PORT")
}
